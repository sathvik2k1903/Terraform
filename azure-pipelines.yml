# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pool:
  vmImage: "windows-latest"

#Build stage
stages:
  - stage: "Build"
    jobs:
      - job: "Build"
        displayName: Build job
        steps:

        - task: CopyFiles@2
          displayName: copy files to target
          inputs:
            SourceFolder: '1.WebApps/WebApp-1'
            Contents: '**'
            TargetFolder: '$(build.artifactstagingdirectory)'

        - task: PublishBuildArtifacts@1
          displayName: publish build artifact
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'drop'
            publishLocation: 'Container'

# deploy stage
  - stage: "Deploy"
    jobs:
       -  job: "Deploy"
          displayName: Deploy job
          steps:

           -  task: DownloadBuildArtifacts@1
              displayName: Download Build Artifact
              inputs:
                buildType: 'current'
                downloadType: 'single'
                downloadPath: '$(System.ArtifactsDirectory)'

           - task: TerraformInstaller@0
             inputs:
              terraformVersion: '1.3.4'

           -  task: TerraformTaskV3@3
              displayName: Terraform init
              inputs:
                provider: 'azurerm'
                command: 'init'
                backendServiceArm: 'Sathvik Azure'
                backendAzureRmResourceGroupName: 'tf-storage-rg'
                backendAzureRmStorageAccountName: 'tfstorage7447'
                backendAzureRmContainerName: 'tfcontainer7447'
                backendAzureRmKey: 'terraform.tfstate'
           -  task: TerraformTaskV3@3
              displayName: Terraform validate
              inputs:
                provider: 'azurerm'
                command: 'validate'

           -  task: TerraformTaskV3@3
              displayName: Terraform plan
              inputs:
                provider: 'azurerm'
                command: 'plan'
                commandOptions: '-out=tfplan'
                environmentServiceNameAzureRM: 'Sathvik Azure'

           -  task: TerraformTaskV3@3
              inputs:
                provider: 'azurerm'
                command: 'apply'
                commandOptions: 'tfplan -auto-approve'
                environmentServiceNameAzureRM: 'Sathvik Azure'
